workspace:
  base: /go
  path: src/[[ .gitserver ]]/[[ .organization ]]/[[ .name ]]

[[ if .tags -]]
clone:
  git:
    image: plugins/git
    tags: true
[[- end ]]

pipeline:
  [[ if not .gomodules -]]
  prerequisites:
    image: "golang:[[ .goversion ]]"
    commands: 
      - go version
      - go get -u github.com/golang/dep/cmd/dep
      - dep ensure -vendor-only
    environment:
      - GO111MODULE=off
  [[- end ]]
  [[ if .linter -]]
  linter:
    image: "golang:[[ .goversion ]]"
    commands:
      - go get -u github.com/golangci/golangci-lint/cmd/golangci-lint
      - golangci-lint run
    [[ if not .gomodules -]]
    environment:
      - GO111MODULE=off
    [[- end ]]
  [[- end ]]
  test:
    image: "golang:[[ .goversion ]]"
    commands:
      - go test -cover -failfast ./...
    [[ if not .gomodules -]]
    environment:
      - GO111MODULE=off
    [[- end ]]
  [[ if .slack -]]
  slack:
    image: plugins/slack
    channel: [[ .slack_channel ]]
    webhook: [[ .slack_webhook ]]
    [[ if not (eq .slack_username "") -]]
    username: [[ .slack_username ]]
    [[- end ]]
    template: >
      {{#success build.status}}
      <{{build.link}}|Build {{build.number}}> by {{build.author}} succeeded in {{since build.started}}

      Version {{#if build.tag}}`{{build.tag}}`{{else}}`latest`{{/if}} built.

      `[[ .name ]]:{{build.commit}}` 
      {{else}}
      <{{build.link}}|Build {{build.number}}> by {{build.author}} failed in {{since build.started}}
      {{/success}}
    when:
      status: [ success, failure ]
      event: [ tag, push ]
      branch: master
      local: false

  slack:
    image: plugins/slack
    channel: [[ .slack_channel ]]
    webhook: [[ .slack_webhook ]]
    username: [[ .slack_username ]]
    template: >
      {{#success build.status}}
      <{{build.link}}|Build {{build.number}}> on branch `{{build.branch}}` by {{build.author}} succeeded in {{since build.started}}
      {{else}}
      <{{build.link}}|Build {{build.number}}> on branch `{{build.branch}}` by {{build.author}} failed in {{since build.started}}
      {{/success}}
    when:
      status: [ success, failure ]
      branch: 
        exclude: master
      local: false
  [[- end ]]